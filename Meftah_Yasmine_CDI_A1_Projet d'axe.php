<!DOCTYPE html>

<html lang="fr">

<head>
  
  <meta charset="UTF-8">
  
  <title>Personnages Harry Potter</title>
  
  <link rel="stylesheet" href="css/style1.css">
  
</head>
<body>
  <!-- header de la page -->
<header>
  <nav class="navbar"> <!-- Barre de nav -->
    <div class="navdiv">
      <div class="logo"><a href="#">HarryPotter Cards</a></div>
      <!--  liens de nav -->
      <ul class="menu-links">
        <li><a href="#" id="homeBtn">Accueil</a></li>
         <!-- bouton Dark Mode  -->
        <li><a href="#" id="darkModeToggle">üåô Dark Mode üåô</a></li>
        <li><a href="#" id="sortsBtn">Sortil√®ges</a></li>
        <li><a href="#">√âchangez</a></li>
        <li><a href="#">Favoris</a></li>
        <li><a href="connexion.html" class="btn-nav">Connexion</a></li>
        <li><a href="inscription.html" class="btn-nav">Inscription</a></li>
      </ul>
    </div>
    <p class="intro-text">
      D√©couvrez les cartes √† collectionner et √©changez-les avec vos amis sur le monde de Harry Potter 
    </p>
  </nav>
</header>

<h1>Rechercher un personnage de Harry Potter</h1>

<!-- pour la mise en page du filtre -->
<div class="filtres">
  <input type="text" id="characterInput" placeholder="Entrez un personnage" />
  <select id="houseSelect">    <!-- liste d√©roulante  -->
    <option value="">-- Toutes les maisons --</option>    <!-- option par d√©faut -->
    <option value="Gryffindor">Gryffondor</option>
    <option value="Slytherin">Serpentard</option>
    <option value="Ravenclaw">Serdaigle</option>
    <option value="Hufflepuff">Poufsouffle</option>
  </select>
</div>

<button id="getCharacter">Voir les r√©sultats</button>
<div class="contenu" id="characters"></div>

<!-- Les Sortil√®ges -->
<div class="sorts-liste" id="spellsList" style="display: none;">
  <h2>Liste des Sortil√®ges</h2>
  <ul id="spellsContainer"></ul>  <!-- liste ou seront montrer les sortileges quand on cliquera dessus-->
</div>

<script>
  // JavaScript
  const charactersContainer = document.getElementById('characters');
  const spellsSection = document.getElementById('spellsList');
  // r√©cup√®re la liste des sortil√®ges √† afficher lorsqu'on clique sur le bouton Sortil√®ges
  const spellsContainer = document.getElementById('spellsContainer');
  const personnagesChoisis = [ // j'ai choisi des persos que je mets par d√©faut d√®s qu'on ouvre le site pour √©viter que √ßa fasse vide, je les ai mis sous forme de liste
    "Harry Potter",
    "Hermione Granger",
    "Ron Weasley",
    "Severus Snape",
    "Draco Malfoy",
    "Luna Lovegood"
  ];

  function afficherPersonnages(data) {
    // affiche les persos
    spellsSection.style.display = "none";
    charactersContainer.innerHTML = '';
    // vide le conteneur des personnages
    data.forEach(char => {
      const div = document.createElement('div');
      div.classList.add('carte'); //class carte pour le style css
       // convertit les donn√©es JSON de l'API en cartes HTML avec gestion des donn√©es manquantes car par ex l'api a des images que pour les perso souvent vu dans les films
      div.innerHTML = `
        <img src="${char.image}" alt="${char.name}">
        <strong>${char.name}</strong>
        <p>Maison : ${char.house || 'Non attribu√©e'}</p>
        <p>Genre : ${char.gender || 'Inconnu'}</p>
        <p>Sang : ${char.ancestry || 'Non pr√©cis√©'}</p>
        <p>Date de naissance : ${char.dateOfBirth || 'Inconnue'}</p>
        <p>Ann√©e de naissance : ${char.yearOfBirth || 'Inconnue'}</p>
        <p>Acteur : ${char.actor || 'Inconnu'}</p>
        <p>Patronus : ${char.patronus || 'Non connu'}</p>
        <p>R√¥le : ${
          char.hogwartsStudent ? '√âl√®ve √† Poudlard' :
          char.hogwartsStaff ? 'Personnel de Poudlard' :
          'Autre'
        }</p>
        <p>Statut : ${char.alive ? 'Vivant(e)' : 'D√©c√©d√©(e)'}</p>
      `;
      charactersContainer.appendChild(div);
      // ajoute la carte du personnage au conteneur
    });
  };

  async function chargerPersonnages() { 
    try {
      const response = await fetch('https://hp-api.onrender.com/api/characters');// requ√™te a l'API Harry Potter
      const data = await response.json();
       // converti en JSON
      const selection = data.filter(char =>
        // filtre pour garder que les perso que j'ai choisi dans la liste
        personnagesChoisis.includes(char.name)
      );
      afficherPersonnages(selection);    // affiche les perso choisi par defaut
    } catch (error) {
      charactersContainer.innerHTML = '<p>Erreur de chargement des personnages.</p>';
      console.error(error);
    }
  }

  async function rechercherPersonnages() {
    const searchName = document.getElementById('characterInput').value.toLowerCase();
    // recup√®re le perso entr√©
    const selectedHouse = document.getElementById('houseSelect').value;
  // r√©cup√®re la maison s√©lectionn√©e dans le filtre d√©roulant

    try {
      const response = await fetch('https://hp-api.onrender.com/api/characters');
      const data = await response.json();
      const filtered = data.filter(char =>
        // filtre les personnages selon la maison
        (searchName === "" || char.name.toLowerCase().includes(searchName)) &&
        (selectedHouse === "" || char.house === selectedHouse)
      );
      if (filtered.length === 0) {
        charactersContainer.innerHTML = '<p>Aucun personnage trouv√©.</p>';
        return;
      }
      afficherPersonnages(filtered);
    } catch (error) {
      charactersContainer.innerHTML = '<p>Erreur lors de la recherche.</p>';
      console.error(error);
    }
  }

  //chercher le personnage
  document.addEventListener('DOMContentLoaded', chargerPersonnages);
  // lorsqu'on click sur le bouton "Voir les r√©sultats", on lance la recherche personnalis√©e via la fonction rechercherPersonnages()
  document.getElementById('getCharacter').addEventListener('click', rechercherPersonnages);

  // Dark MODE , je me suis aid√© de la doc 
  const toggle = document.getElementById('darkModeToggle');
  // r√©cup le bouton dark mode
  toggle.addEventListener('click', function (e) {
    // click
    e.preventDefault();
    document.body.classList.toggle('dark');
    // met la classe 'dark' sur le body
    toggle.textContent = document.body.classList.contains('dark') 
    // change le txte  du bouton selon le mode
      ? '‚òÄÔ∏è White Mode ‚òÄÔ∏è' 
      : 'üåô Dark Mode üåô';
    
  });

  // affiche les sortileges 
  document.getElementById('sortsBtn').addEventListener('click', async (e) => {
    e.preventDefault();
    charactersContainer.innerHTML = '';
    spellsSection.style.display = 'block';
    // montre la section des sortil√®ges
    
    try {
      const response = await fetch('https://hp-api.onrender.com/api/spells');
      //  demande a l'api pour les sortil√®ges
      const spells = await response.json();
      spellsContainer.innerHTML = '';
      spells.forEach(spell => {
        // j'ai fait une liste pour les sortil√®ge
        const li = document.createElement('li');
        li.innerHTML = `<strong>${spell.name}</strong> ‚Äì ${spell.description}`;
        // met le nom du sort et la description
        spellsContainer.appendChild(li);
      });
    } catch (err) {
      spellsContainer.innerHTML = '<li>Erreur lors du chargement des sortil√®ges.</li>';
      
      console.error(err);
    }
  });
  

// ACCUEIL
// r√©initialise les filtres (champ texte et maison), la lsite sortil√®ges et recharge les personnages par d√©faut, comme √† l'ouverture de la page
  document.getElementById('homeBtn').addEventListener('click', async (e) => {
    e.preventDefault();
    document.getElementById('characterInput').value = '';
    document.getElementById('houseSelect').selectedIndex = 0;
    spellsSection.style.display = 'none';
    await chargerPersonnages();
  });

</script>

<!-- bas de page -->
<footer class="footer">
  <div class="footer-content">
    <p>&copy; 2025 HarryPotter Cards. Tous droits r√©serv√©s.</p>
    <div class="footer-links">
      <!-- liens du footer -->
      <a href="#">Mentions l√©gales</a>
      <a href="#">Politique de confidentialit√©</a>
      <a href="#">Contact</a>
    </div>
  </div>
</footer>

</body>
</html>
